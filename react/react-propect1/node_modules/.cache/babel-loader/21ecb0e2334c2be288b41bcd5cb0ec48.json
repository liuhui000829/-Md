{"ast":null,"code":"/* 容器组件*/\n\n/*\r\n//引入CountUI组件\r\nimport CountUI from \"../../components/Count\";\r\n\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n} from \"../../redux/count_Action\";\r\n\r\n// 引入connect用于连接 UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({ count: state });\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    increment: (number) => dispatch(createIncrementAction(number)),\r\n    decrement: (number) => dispatch(createDecrementAction(number)),\r\n    asyncIncrement: (number, time) =>\r\n      dispatch(createIncrementAsyncAction(number, time)),\r\n  };\r\n};\r\n\r\n// 创建并暴漏一个Count的容器组件\r\n// connect 是个高阶函数  mapStateToProps 接收state状态   mapDispatchToProps接收操作状态的方法\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CountUI);\r\n//相当于   <Count store={store} a={1} b={()=>123}/> a和b写成了  mapStateToProps mapDispatchToProps\r\n*/\n//2 . 优化写法\n//引入CountUI组件\nimport CountUI from \"../../components/Count\";\nimport { incrementAction, decrementAction, ncrementAsyncAction } from \"../../redux/count_Action\"; // 引入connect用于连接 UI组件与redux\n\nimport { connect } from \"react-redux\"; // 自动调用了dispatach\n\nexport default connect(function (state) {\n  return {\n    count: state\n  };\n}, {\n  createIncrementAction: createIncrementAction,\n  createDecrementAction: createDecrementAction,\n  createIncrementAsyncAction: createIncrementAsyncAction\n})(CountUI);","map":{"version":3,"sources":["C:/Users/刘先生/Desktop/js-Md/react/react-propect1/src/containers/Count/index.jsx"],"names":["CountUI","incrementAction","decrementAction","ncrementAsyncAction","connect","state","count","createIncrementAction","createDecrementAction","createIncrementAsyncAction"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,OAAOA,OAAP,MAAoB,wBAApB;AAEA,SACEC,eADF,EAEEC,eAFF,EAGEC,mBAHF,QAIO,0BAJP,C,CAMA;;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;;AACA,eAAeA,OAAO,CAAC,UAACC,KAAD;AAAA,SAAY;AAAEC,IAAAA,KAAK,EAAED;AAAT,GAAZ;AAAA,CAAD,EAAgC;AACpDE,EAAAA,qBAAqB,EAArBA,qBADoD;AAEpDC,EAAAA,qBAAqB,EAArBA,qBAFoD;AAGpDC,EAAAA,0BAA0B,EAA1BA;AAHoD,CAAhC,CAAP,CAIZT,OAJY,CAAf","sourcesContent":["/* 容器组件*/\r\n\r\n/*\r\n//引入CountUI组件\r\nimport CountUI from \"../../components/Count\";\r\n\r\nimport {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n} from \"../../redux/count_Action\";\r\n\r\n// 引入connect用于连接 UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => ({ count: state });\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    increment: (number) => dispatch(createIncrementAction(number)),\r\n    decrement: (number) => dispatch(createDecrementAction(number)),\r\n    asyncIncrement: (number, time) =>\r\n      dispatch(createIncrementAsyncAction(number, time)),\r\n  };\r\n};\r\n\r\n// 创建并暴漏一个Count的容器组件\r\n// connect 是个高阶函数  mapStateToProps 接收state状态   mapDispatchToProps接收操作状态的方法\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CountUI);\r\n\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(CountUI);\r\n//相当于   <Count store={store} a={1} b={()=>123}/> a和b写成了  mapStateToProps mapDispatchToProps\r\n*/\r\n\r\n//2 . 优化写法\r\n//引入CountUI组件\r\nimport CountUI from \"../../components/Count\";\r\n\r\nimport {\r\n  incrementAction,\r\n  decrementAction,\r\n  ncrementAsyncAction,\r\n} from \"../../redux/count_Action\";\r\n\r\n// 引入connect用于连接 UI组件与redux\r\nimport { connect } from \"react-redux\";\r\n\r\n// 自动调用了dispatach\r\nexport default connect((state) => ({ count: state }), {\r\n  createIncrementAction,\r\n  createDecrementAction,\r\n  createIncrementAsyncAction,\r\n})(CountUI);\r\n"]},"metadata":{},"sourceType":"module"}